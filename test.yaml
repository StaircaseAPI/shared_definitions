# https://stackoverflow.com/questions/25385559/rest-api-best-practices-args-in-query-string-vs-in-request-body
# https://stackoverflow.com/questions/4024271/rest-api-best-practices-where-to-put-parameters
openapi: 3.0.1
info:
  title: Asset
  version: 1.0.0
  description: Placeholder

servers:
  - url: 'https://documentation.staircaseapi.com/asset'
  - url: 'https://documentation-test.staircaseapi.com/asset'
  - url: 'https://aus.staircaseapi.com/asset'

# NOTE: Commenting currently because they want to display a default value
# security:
#   - APIKey: []

tags:
  - name: Assets

paths:
  /transactions:
    post:
      operationId: createTransaction
      summary: Create Transaction
      description: |-
        **Create Transaction** creates a transaction in Staircase.

        Transactions in Staircase are containers for all of the data related to an instance of a transaction type. They enable you to correlate the output of various products to a single transaction type, where the transaction type depends on your line of business.

        Transactions are identified by a unique key called *transaction_id*. As you use different Staircase products to gather the data needed for a specific instance of your transaction type, and receive different sets of output from each product, use the same *transaction_id* to correlate all of the outputs to the same transaction.

        A *transaction_id*, when used properly,  gives you a holistic view of the data related to the transaction youâ€™ve assembled.
      parameters:
        - $ref: '#/components/parameters/apiKey'
      responses:
        '201':
          description: Transaction created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  transaction_id:
                    $ref: '#/components/schemas/TransactionId'
              examples:
                Example:
                  value:
                    transaction_id:
                      $ref: '#/components/schemas/TransactionId/example'
        '400':
          # TODO: When does this even happen?
          description: Transaction creation unsuccessfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                  error_code:
                    type: integer
              example:
                error: 'Response status not OK while creating a new transaction, status_code: [6b19feeb-7433-448e-b285-b758d19a4fe6]'
                error_code: 4050
        '403':
          $ref: '#/components/responses/403KeyInvalid'
      tags:
        - Assets

  /transactions/{transaction_id}/collections:
    post:
      operationId: createCollection
      summary:
        Create Collection
      description: |
        **Create Collection** creates a collection of elements required for asset verification. A collection contains a digital representation of the borrower and is identified by *collection_id*. A *collection_id* is passed to the data partner when requesting asset verification
      parameters:
        - $ref: '#/components/parameters/apiKey'
        - $ref: '#/components/parameters/transactionIdPathRequired'
      requestBody:
        description: Collection data to be persisted
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StaircaseRequestCollection'
            examples:
              Example:
                $ref: '#/components/examples/AssetRequestCollection'
      responses:
        '201':
          description: Collection created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  collection_id:
                    $ref: '#/components/schemas/CollectionId'
              examples:
                Example:
                  value:
                    collection_id:
                      $ref: '#/components/schemas/CollectionId/example'
        # TODO: Change the error response here
        '400':
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                CreateCollectionError:
                  value:
                    message: 'Unable to create collection. Please check the collection data'
            text/html:
              schema:
                $ref: '#/components/schemas/AWSError'
        '403':
          $ref: '#/components/responses/403KeyInvalid'
        '404':
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                CreateCollectionError:
                  value:
                    message: 'Unable to create collection. Please check the transaction Id'
            text/html:
              schema:
                $ref: '#/components/schemas/AWSError'
      tags:
        - Assets

  /transactions/{transaction_id}/collections/{collection_id}:
    get:
      operationId: retrieveCollection
      summary: Retrieve Collection
      description: "**Retrieve Collection** returns the content of a given collection_id associated with a transaction_id."
      parameters:
        - $ref: '#/components/parameters/apiKey'
        - $ref: '#/components/parameters/transactionIdPathRequired'
        - $ref: '#/components/parameters/collectionIdPathRequired'
      responses:
        # TODO: Check real response here
        '200':
          description: Successfully Retrieved Collection
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StaircaseRequestCollection'
              examples:
                PlaidResponse:
                  $ref: '#/components/examples/PlaidResponseCollection'

        # TODO: change the error response here
        '400':
          description: Error
        '403':
          $ref: '#/components/responses/403KeyInvalid'
          # TODO: Add real error here
        '404':
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                GetCollectionError:
                  value:
                    message: 'Unable to get collection. Please check the given ids'
                GetCollectionsError:
                  value:
                    message: 'Unable to get collections of given transaction. Please check the transaction id'
      tags:
        - Assets
    put:
      operationId: updateCollection
      summary: Update Collection
      description: '**Update Collection** allows you to update the content of a given collection_id associated with a transaction_id.'
      parameters:
        - $ref: '#/components/parameters/apiKey'
        - $ref: '#/components/parameters/transactionIdPathRequired'
        - $ref: '#/components/parameters/collectionIdPathRequired'
      responses:
        # TODO: Change success response here, check what the actual response is
        '200':
          description: Success
          # TODO: Change error response here
        '400':
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                UpdateCollectionError:
                  value:
                    message: 'Unable to update collection. Please check the collection data'
            text/html:
              schema:
                $ref: '#/components/schemas/AWSError'
        '403':
          $ref: '#/components/responses/403KeyInvalid'
        '404':
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                UpdateCollectionError:
                  value:
                    message: 'Unable to update collection. Please check the given ids'
            text/html:
              schema:
                $ref: '#/components/schemas/AWSError'
      tags:
        - Assets

  /verify-assets:
    post:
      operationId: verifyAsset
      summary: Verify Asset
      description: |
        "**Verify Assets** verifies account balances, historical transactions, and account holder identity information for various asset types. In order to receive a 200 response, you need to provide a valid *transaction_id*, a valid *collection_id* and a valid *partner_name*"

        Providing the *redirect_url* is optional and will allow you to redirect the borrower to an URL of your choosing after linking her or his assets. If left empty, this URl defaults to the Staircase homepage
      parameters:
        - $ref: '#/components/parameters/apiKey'
      requestBody:
        # Stoplight currently doesn't support defining entire requestBodies as components
        # $ref: '#/components/requestBodies/PartnerCall'
        description: Call to a Staircase Partner
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                transaction_id:
                  $ref: '#/components/schemas/TransactionId'
                collection_id:
                  $ref: '#/components/schemas/CollectionId'
                partner_name:
                  $ref: '#/components/schemas/PartnerName'
                redirect_url:
                  type: string
                  example: "www.google.com"
                  description: URL that the borrower will get redirected to after linking their assets through the partner form
              required:
                - transaction_id
                - collection_id
                - partner_name
      responses:
        '201':
          description: Request for Asset Report created successfully. Please take the contained action_url and forward it to the borrower. The url is valid for 48 hours.
          content:
            application/json:
              schema:
                type: object
                properties:
                  action_url:
                    type: string
                    description: Action URl that needs to be sent to the borrower
                  message:
                    type: string
                    description: Message
                description: Response schema
              examples:
                Example:
                  value:
                    widget_url: "www.staircase.co"
                    message: 'When ready, data will be available under the following collection_id. Use this new collection_id to get the execution status.'
        # TODO: Change this later
        '400':
          description: General error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          $ref: '#/components/responses/403KeyInvalid'
        '404':
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                GetCollectionError:
                  value:
                    message: 'Unable to get collection. Please check input collection id'
      tags:
        - Assets

  /request-elements:
    get:
      operationId: requestElements
      summary: Retrieve Request Elements
      description: '**Retrieve Request Elements** retrieves a list of elements needed to invoke a data partner for asset verification.'
      parameters:
        - $ref: '#/components/parameters/apiKey'
      responses:
        '200':
          description: Elements retrieved sucessfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetrieveElements'
              examples:
                Example:
                  $ref: '#/components/examples/RequestElementsExample'
        # TODO: Add the real error here
        '400':
          description: Elements unavailable
        '403':
          $ref: '#/components/responses/403KeyInvalid'
        '500':
          description: Error retrieving request elements
      tags:
        - Assets

  /request-elements/complete:
    post:
      operationId: validateCollection
      summary: Validate Collection
      description: |
        **Validate Collection** allows you to validate an input collection prior to submitting to our partners.
        This endpoint will give messages with all the corrections you need to make to your collection in order for it to be accepted by our partner call.
      parameters:
        - $ref: '#/components/parameters/apiKey'
      requestBody:
        description: Collection data that needs to be validated
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StaircaseRequestCollection'
            examples:
              Example:
                $ref: '#/components/examples/AssetRequestCollection'

      responses:
        '200':
          description: Collection is valid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                Example:
                  $ref: '#/components/examples/ValidationSuccess'
        # TODO: Add the real error here
        '400':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                Example:
                  $ref: '#/components/examples/ValidationError'
            text/html:
              schema:
                $ref: '#/components/schemas/AWSError'
        '403':
          $ref: '#/components/responses/403KeyInvalid'
        '500':
          description: Error retrieving request elements
      tags:
        - Assets

  /response-elements:
    get:
      operationId: responseElements
      summary: Retrieve Response Elements
      description: '**Retrieve Response Elements** provides a list of elements that will be returned by a data partner performing employment verification.'
      parameters:
        - $ref: '#/components/parameters/apiKey'
      responses:
        '200':
          description: Elements retrieved sucessfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetrieveElements'
              examples:
                Example:
                  $ref: '#/components/examples/ResponseElementsExample'
        '400':
          description: Elements unavailable
        '403':
          $ref: '#/components/responses/403KeyInvalid'
        # TODO: Remove this one later
        '404':
          description: Endpoint doesn't exist
        '500':
          description: Error retrieving response elements
      tags:
        - Assets

  # TODO: This entire endpoint needs to be reworked. It is not valid anymore
  /build-payload:
    post:
      summary: Retrieve Example JSON
      operationId: retrieveExampleJSON
      description: |
        **Retrieve Example JSON** retrieves an example schema for either:
        - a **request** for asset verification, or
        - a **response** containing asset verification details.
        To retrieve the example asset verification request schema:
        1. Invoke  [Retrieve Request Elements](https://api.staircase.co/#/docs/borrower/asset.yml/paths/~1asset~1request-elements/get) to get an array of asset verification request elements.
        2. Place the output from **Retrieve Request Elements** into the **Retrieve Example JSON** request body.
        3. Place your *api_key* into the **Retrieve Example JSON** header.
        4. Send the request to **Retrieve Example JSON**. You will receive an example schema in response, with null values that must be replaced with your own.
        To retrieve the asset verification response schema:
        1. Invoke  [Retrieve Response Elements](https://api.staircase.co/#/docs/borrower/asset.yml/paths/~1asset~1response-elements/get) to get an array of asset verification response elements.
        2. Place the output from **Retrieve Response Elements** into the **Retrieve Example JSON** request body.
        3. Place your *api_key* into the **Retrieve Example JSON** header.
        4. Send the request to **Retrieve Example JSON**. You will receive an example schema in response, with null values that will be replaced by the data partner upon return of asset verification details.
      parameters:
        - $ref: '#/components/parameters/apiKey'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RetrieveElements'
            examples:
              Example:
                $ref: '#/components/examples/BuildPayloadExample'
      responses:
        '200':
          description: Asset Verification Payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssetInputData'
              examples:
                Example:
                  $ref: '#/components/examples/AssetInputData'
        '400':
          description: Error
        '403':
          $ref: '#/components/responses/403KeyInvalid'
        '404':
          description: Elements not found
        '500':
          description: Error translating elements
      tags:
        - Assets

  /status/{transaction_id}/{collection_id}:
    get:
      operationId: retrieveStatus
      summary: Retrieve Status
      description: '**Retrieve Status** determines if a data partner has completed asset verification.'
      parameters:
        - $ref: '#/components/parameters/apiKey'
        - $ref: '#/components/parameters/transactionIdPathRequired'
        - $ref: '#/components/parameters/collectionIdPathRequired'
      responses:
        '200':
          description: Request for Asset Report created successfully. Please take the contained action_url and forward it to the borrower. The url is valid for 48 hours.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    description: "Potential status responses: 'REQUEST_MADE', 'WAITING_FOR_RESPONSE', 'COMPLETED', 'ERROR'"
        # TODO: Change this error!
        '400':
          description: Error
        '403':
          $ref: '#/components/responses/403KeyInvalid'
        # TODO: Change this error!
        '404':
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                GetCollectionError:
                  value:
                    message: 'Unable to get status. Please check the given ids'
        '500':
          description: Internal Server Error
      tags:
        - Assets

        # TODO: Add remaining functions

components:

  # NOTE: Replacing this with header parameters instead
  #   securitySchemes:
  #     APIKey:
  #       type: apiKey
  #       in: header
  #       name: x-api-key


  schemas:
    Error:
      type: object
      properties:
        message:
          type: string
          description: Message

    AWSError:
      type: string

    AssetInputData:
      type: object
      properties:
        deal_sets:
          type: array
          items:
            type: object
            properties:
              parties:
                type: array
                items:
                  type: object
                  properties:
                    individual:
                      type: object
                      properties:
                        first_name:
                          type: string
                          example: John
                        last_name:
                          type: string
                          example: Deere
                      required:
                        - first_name
                        - last_name
                    customer_transaction_ID:
                      type: string
                      example: 6f039329-3fd6-44c1-a460-9af546e798de
                    taxpayer_identifiers:
                      type: array
                      items:
                        type: object
                        properties:
                          value:
                            type: string
                            example: "123456789"
                        required:
                          - value
                  required:
                    - customer_transaction_ID

    AssetRequestCollection:
      description: A Staircase Collection holds a set of datapoints, connected to a Staircase Transaction
      type: object
      properties:
        data:
          $ref: '#/components/schemas/AssetInputData'
        metadata:
          type: object
          description: Staircase metadata
      additionalProperties: false

    StaircaseRequestCollection:
      description: A Staircase Collection holds a set of datapoints, connected to a Staircase Transaction
      type: object
      properties:
        data:
          type: object
          description: Customer Input Data
        metadata:
          type: object
          description: Staircase metadata
        transaction_id:
          $ref: '#/components/schemas/TransactionId'
        collection_id:
          $ref: '#/components/schemas/CollectionId'
      additionalProperties: false

    RetrieveElements:
      description: Staircase Elements JSON object with paths and values
      type: object
      properties:
        path:
          type: string
          description: Contains the path in Staircase language
        value:
          type: string
          nullable: true
          description: Enter your own values here


    TransactionId:
      type: string
      format: uuid
      # title: transaction_id
      description: Staircase Transaction Identifier
      example: 8109c79a-e50b-46b8-8032-0d6e556dfaa0

    CollectionId:
      type: string
      format: uuid
      # title: collection_id
      description: Staircase Collection Identifier
      example: "6b19feeb-7433-448e-b285-b758d19a4fe6"

    PartnerName:
      type: string
      # title: partner_name
      enum:
        - Plaid
        - Finicity
        - Yodlee
      example: "Plaid"
      description: >
        Available Partners:
          * `Plaid` - Make a call to the Plaid API
          * `Finicity` - Make a call to the Finicity API
          * `Yodlee` - Make a call to the Yodlee API

  # NOTE: Stoplight doesn't currently support this feature. Will have to test later
  requestBodies:
    PartnerCall:
      description: Call to a Staircase Partner
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              transaction_id:
                $ref: '#/components/schemas/TransactionId'
              collection_id:
                $ref: '#/components/schemas/CollectionId'
              partner_name:
                $ref: '#/components/schemas/PartnerName'
            required:
              - transaction_id
              - collection_id
              - partner_name

  parameters:
    apiKey:
      name: x-api-key
      in: header
      required: true
      schema:
        type: string
        default: f70be70c-31cd-43ce-9941-961e54840c9a
      description: Staircase Documentation Environment API Key
    transactionIdQueryRequired:
      name: transaction_id
      in: query
      required: true
      description: Staircase Transaction Identifier
      schema:
        $ref: '#/components/schemas/TransactionId'
    transactionIdQueryNotRequired:
      name: transaction_id
      in: query
      required: false
      description: Staircase Transaction Identifier
      schema:
        $ref: '#/components/schemas/TransactionId'
    transactionIdPathRequired:
      name: transaction_id
      in: "path"
      required: true
      description: Staircase Transaction Identifier
      schema:
        $ref: '#/components/schemas/TransactionId'
    transactionIdPathNotRequired:
      name: "transaction_id"
      in: "query"
      required: false
      description: Staircase transaction_id
      schema:
        $ref: '#/components/schemas/TransactionId'
    collectionIdQueryRequired:
      name: "collection_id"
      in: "query"
      required: true
      description: Staircase collection_id
      schema:
        $ref: '#/components/schemas/CollectionId'
    collectionIdPathRequired:
      name: "collection_id"
      in: "path"
      required: true
      description: Staircase collection_id
      schema:
        $ref: '#/components/schemas/CollectionId'

  responses:
    403KeyInvalid:
      description: Invalid key for service
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
              url:
                type: string
          example:
            message: 'Please check the key you used to call this service'
            url: 'https://staircase.stoplight.io/docs/api-reference/customer-account-manager-service.yml/paths/~1products~1refresh/post'

    500InternalServerError:
      description: The product has encountered an internal server error. If possible, please contact Staircase support with the transaction_id you used.
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
          example:
            message: 'The product has encountered an internal server error. If you have used a transaction_id to call our services, please submit it to Staircase support'

  examples:
    AssetInputData:
      value:
        deal_sets:
          - parties:
              - individual:
                  first_name: John
                  last_name: Deere
                customer_transaction_ID: 6f039329-3fd6-44c1-a460-9af546e798de
                taxpayer_identifiers:
                  - value: "123456789"

    AssetRequestCollection:
      value:
        data:
          $ref: '#/components/examples/AssetInputData/value'
        metadata:
          { }

    RequestElementsExample:
      summary: Example for the Asset Request Elements object
      value:
        $.deal_sets[0].parties[0].individual.first_name: null
        $.deal_sets[0].parties[0].individual.last_name: null
        $.deal_sets[0].parties[0].customer_transaction_ID: null
        $.deal_sets[0].parties[0].taxpayer_identifiers[0].value: null

    ResponseElementsExample:
      summary: Example for the Asset Response Elements object
      value:
        $.deal_sets.deal_set[0].deals.deal[0].assets.asset[*].account_identifier: null
        $.deal_sets.deal_set[0].deals.deal[0].assets.asset[*].account_in_name_of_description: null
        $.deal_sets.deal_set[0].deals.deal[0].assets.asset[*].asset_documentations.asset_documentation[0].data_source_date: null
        $.deal_sets.deal_set[0].deals.deal[0].assets.asset[*].asset_documentations.asset_documentation[0].data_source_id: null
        $.deal_sets.deal_set[0].deals.deal[0].assets.asset[*].asset_documentations.asset_documentation[0].type: null
        $.deal_sets.deal_set[0].deals.deal[0].assets.asset[*].asset_documentations.asset_documentation[0].verification_range_count: null
        $.deal_sets.deal_set[0].deals.deal[0].assets.asset[*].asset_documentations.asset_documentation[0].verification_range_type: null
        $.deal_sets.deal_set[0].deals.deal[0].assets.asset[*].asset_holder.name.full: null
        $.deal_sets.deal_set[0].deals.deal[0].assets.asset[*].asset_holder.name.identifier: null
        $.deal_sets.deal_set[0].deals.deal[0].assets.asset[*].cash_amount: null
        $.deal_sets.deal_set[0].deals.deal[0].assets.asset[*].cash_or_market_value_amount: null
        $.deal_sets.deal_set[0].deals.deal[0].assets.asset[*].cash_overdraft_limit_amount: null
        $.deal_sets.deal_set[0].deals.deal[0].assets.asset[*].currency_code: null
        $.deal_sets.deal_set[0].deals.deal[0].assets.asset[*].description: null
        $.deal_sets.deal_set[0].deals.deal[0].assets.asset[*].type: null
        $.deal_sets.deal_set[0].deals.deal[0].assets.asset[*].type_other: null
        $.deal_sets.deal_set[0].deals.deal[0].services.service[0].verification_of_assets.verification_of_assets_response.days_of_data_requested: null
        $.deal_sets.deal_set[0].deals.deal[0].services.service[0].verification_of_assets.verification_of_assets_response.partner: null
        $.deal_sets.deal_set[0].deals.deal[0].services.service[0].verification_of_assets.verification_of_assets_response.partner_data_source_id: null
        $.deal_sets.deal_set[0].deals.deal[0].services.service[0].verification_of_assets.verification_of_assets_response.partner_product: null
        $.deal_sets.deal_set[0].deals.deal[0].services.service[0].verification_of_assets.verification_of_assets_response.service_date: null

    BuildPayloadExample:
      value:
        $.deal_sets[0].parties[0].individual.first_name: John
        $.deal_sets[0].parties[0].individual.last_name: Deere
        $.deal_sets[0].parties[0].customer_transaction_ID: 6f039329-3fd6-44c1-a460-9af546e798de
        $.deal_sets[0].parties[0].taxpayer_identifiers[0].value: "123456789"

    ValidationError:
      value:
        message: "3 is not of type 'string'. Failed validating 'type' in schema['properties']['deal_sets']['items'][0]['properties']['parties']['items'][0]['properties']['customer_transaction_ID']:"

    ValidationSuccess:
      value:
        message: "Collection is valid."

    PlaidResponseCollection:
      value:
        metadata:
          created_at: 02/15/2021, 11:27:14 AM EST
          last_updated_at: 02/15/2021, 11:27:59 AM EST
          partner_name: plaid
          validation: false
        collection_id: f17cd1c2-915a-4e3c-8028-d6fddeca39e6
        transaction_id: d26404ec-59da-44e1-a127-31e53850a3a9
        data:
          deal_sets:
            deal_set:
            - deals:
                deal:
                - assets:
                    asset:
                    - account_identifier: '0000'
                      account_in_name_of_description: Alberta Bobbeth Charleson
                      asset_documentations:
                        asset_documentation:
                        - data_source_date: '2021-02-15T16:27:50Z'
                          data_source_id: 4R8bP1aepMhZMAQG6r7RSeMJDqQyM8Hg43BKJ
                          type: VerificationOfDeposit
                          verification_range_count: 1
                          verification_range_type: MostRecentDays
                      asset_holder:
                        name:
                          full: Chase
                          identifier: ins_3
                      cash_amount: 100
                      cash_or_market_value_amount: 110
                      cash_overdraft_limit_amount:
                      currency_code: USD
                      description: Plaid Gold Standard 0% Interest Checking
                      type: CheckingAccount
                      type_other:
                    - account_identifier: '1111'
                      account_in_name_of_description: Alberta Bobbeth Charleson
                      asset_documentations:
                        asset_documentation:
                        - data_source_id: NE1N9J7xMAixNRanLeVDh3ydQaegyLSrk79zX
                          type: VerificationOfDeposit
                          verification_range_count: 1
                          verification_range_type: MostRecentDays
                      asset_holder:
                        name:
                          full: Chase
                          identifier: ins_3
                      cash_amount: 200
                      cash_or_market_value_amount: 210
                      cash_overdraft_limit_amount:
                      currency_code: USD
                      description: Plaid Silver Standard 0.1% Interest Saving
                      type: SavingsAccount
                      type_other:
                    - account_identifier: '2222'
                      account_in_name_of_description: Alberta Bobbeth Charleson
                      asset_documentations:
                        asset_documentation:
                        - data_source_id: PlpWwJQajmSaNQwedoXDuZNJEa1rNWcwVNgnQ
                          type: VerificationOfDeposit
                          verification_range_count: 1
                          verification_range_type: MostRecentDays
                      asset_holder:
                        name:
                          full: Chase
                          identifier: ins_3
                      cash_amount:
                      cash_or_market_value_amount: 1000
                      cash_overdraft_limit_amount:
                      currency_code: USD
                      description: Plaid Bronze Standard 0.2% Interest CD
                      type: cd
                      type_other:
                    - account_identifier: '4444'
                      account_in_name_of_description: Alberta Bobbeth Charleson
                      asset_documentations:
                        asset_documentation:
                        - data_source_id: kl5D4vxKpJSxrnAGk9LNheLq6BDkL7HxA8k3w
                          type: VerificationOfDeposit
                          verification_range_count: 1
                          verification_range_type: MostRecentDays
                      asset_holder:
                        name:
                          full: Chase
                          identifier: ins_3
                      cash_amount: 43200
                      cash_or_market_value_amount: 43200
                      cash_overdraft_limit_amount:
                      currency_code: USD
                      description: Plaid Platinum Standard 1.85% Interest Money Market
                      type: MoneyMarketFund
                      type_other:
                    - account_identifier: '5555'
                      account_in_name_of_description: Alberta Bobbeth Charleson
                      asset_documentations:
                        asset_documentation:
                        - data_source_id: lkVDN69rJqudzrmxb4RPfvzAGXgJzBCL6rl5n
                          type: VerificationOfDeposit
                          verification_range_count: 1
                          verification_range_type: MostRecentDays
                      asset_holder:
                        name:
                          full: Chase
                          identifier: ins_3
                      cash_amount:
                      cash_or_market_value_amount: 320.76
                      cash_overdraft_limit_amount:
                      currency_code: USD
                      description:
                      type: RetirementFund
                      type_other:
                    - account_identifier: '6666'
                      account_in_name_of_description: Alberta Bobbeth Charleson
                      asset_documentations:
                        asset_documentation:
                        - data_source_id: q3VDQvbdqNfJQp4XPejrhmvoW4P7vjsJBVn5Q
                          type: VerificationOfDeposit
                          verification_range_count: 1
                          verification_range_type: MostRecentDays
                      asset_holder:
                        name:
                          full: Chase
                          identifier: ins_3
                      cash_amount:
                      cash_or_market_value_amount: 23631.9805
                      cash_overdraft_limit_amount:
                      currency_code: USD
                      description:
                      type: RetirementFund
                      type_other:
                  services:
                    service:
                    - verification_of_assets:
                        verification_of_assets_response:
                          days_of_data_requested: 1
                          partner: Plaid
                          partner_data_source_id: f3b4826b-76f3-4ee5-9821-43b38e941ddf
                          partner_product: Assets
                          service_date: '2021-02-15'
